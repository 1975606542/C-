#include <iostream>
#include <time.h>

using namespace std;

long long F1(int n){
    if(n==1||n==2)
        return 1;
    else
        return F1(n-1)+F1(n-2);

}
long long checker(long long* flag,int n)
{
    if(n==1||n==2)
        return 1;
//  判断之前是否计算过，有则返回值
    if(flag[n])
        return flag[n];
//  没有，继续递推
    else
        flag[n]= checker(flag,n-1)+ checker(flag,n-2);
        return flag[n];
}

long long F2(int n){
    if (n<1)
        return 0;
    long long *flag =(long long*) calloc((n+1),sizeof(long long));

    return checker(flag,n);
}

long long F3(int n){
    if(n<1)
        return 0;
    long long  * dp =(long long*) calloc((n+1),sizeof(long long ));
    if(n==1||n==2)
        return 1;
    dp[1]=dp[2]=1;
    for(int i=3;i<=n;i++){
        dp[i]=dp[i-1]+dp[i-2];
    }
    return dp[n];
}

long long F4(int n){
    if(n<1)
        return 0;
    if(n==1|n==2)
        return 1;
    long long pre=1,cur=1;
    long long sum;
    for(int i=3;i<=n;i++){
        sum=pre+cur;
        pre=cur;
        cur=sum;
    }
    return sum;
}



int main()
{
    clock_t start,end;
    start = clock();//开始时间
    cout<<F1(50)<<endl;
    end = clock();   //结束时间
    cout<<"time = "<<double(end-start)/CLOCKS_PER_SEC<<"s"<<endl;  //输出时间（单位：ｓ）
    start = clock();//开始时间
    cout<<F2(50)<<endl;
    end = clock();   //结束时间
    cout<<"time = "<<double(end-start)/CLOCKS_PER_SEC<<"s"<<endl;  //输出时间（单位：ｓ）
    start=clock();
    cout<<F3(50)<<endl;
    end=clock();
    cout<<"time: "<<double(end-start)/CLOCKS_PER_SEC<<"s"<<endl;
    start=clock();
    cout<<F4(50)<<endl;
    end=clock();
    cout<<"time: "<<double(end-start)/CLOCKS_PER_SEC<<"s"<<endl;
}
